{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "env": {
      "type": "String",
      "defaultValue": "nyss"
    },
    "hostingEnvironment": {
      "type": "String"
    },
    "alwaysOn": {
      "type": "Bool"
    },
    "sku": {
      "type": "String"
    },
    "skuCode": {
      "type": "String"
    },
    "workerSize": {
      "type": "String"
    },
    "workerSizeId": {
      "type": "String"
    },
    "numberOfWorkers": {
      "type": "String"
    },
    "currentStack": {
      "type": "String"
    },
    "serviceBusSku": {
      "defaultValue": "Standard",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "type": "String",
      "metadata": {
        "description": "The messaging tier for service Bus namespace"
      }
    },
    "tagValues": {
      "type": "object"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS"
    },
    "storageAccessTier": {
      "type": "string",
      "defaultValue": "Hot"
    },
    "storageKind": {
      "type": "string",
      "defaultValue": "StorageV2"
    },
    "aadTenantId": {
      "type": "secureString"
    },
    "aadWebAppClientId": {
      "type": "securestring"
    },
    "specificResource": {
      "defaultValue": "all",
      "type": "string",
      "metadata": {
        "description": "Only the specified resource will get provisioned, NB! If used in complete mode, the other resource will get deleted"
      }
    }
  },
  "variables": {
    "specificResource": "[if(equals('all', parameters('specificResource')),'', parameters('specificResource'))]",
    "location": "[resourceGroup().location]",
    "subscriptionId": "[subscription().subscriptionId]",
    "webAppName": "[concat('nrx-cbs-nyss-webapp-', parameters('env'))]",
    "funcAppName": "[concat('nrx-cbs-nyss-funcapp-', parameters('env'))]",
    "reportApiWebAppName": "[concat('nrx-cbs-nyss-reportapi-webapp-', parameters('env'))]",
    "reportFuncAppName": "[concat('nrx-cbs-nyss-report-funcapp-', parameters('env'))]",
    "standardPlanName": "[concat('nrx-cbs-nyss-sp-', parameters('env'))]",
    "standardPlanId": "[resourceId('Microsoft.Web/serverfarms', variables('standardPlanName'))]",
    "consumptionPlanName": "[concat('nrx-cbs-nyss-consumption-sp-', parameters('env'))]",
    "consumptionPlanId": "[resourceId('Microsoft.Web/serverfarms', variables('consumptionPlanName'))]",
    "serviceBusNamespaceName": "[concat('nrx-cbs-nyss-bus-', parameters('env'))]",
    "serviceBusNamespaceNameStaging": "[concat('nrx-cbs-nyss-bus-stg-', parameters('env'))]",
    "reportQueueName": "[concat('nrx-cbs-nyss-bus-report-queue-', parameters('env'))]",
    "sendEmailQueueName": "[concat('nrx-cbs-nyss-bus-send-email-queue-', parameters('env'))]",
    "sendSmsQueueName": "[concat('nrx-cbs-nyss-bus-send-sms-queue-', parameters('env'))]",
    "reportDismissalQueue": "[concat('nrx-cbs-nyss-bus-report-dismissal-queue-', parameters('env'))]",
    "checkAlertQueue": "[concat('nrx-cbs-nyss-bus-check-alert-queue-', parameters('env'))]",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "defaultAuthRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespaceName'), variables('defaultSASKeyName'))]",
    "defaultAuthRuleSbStaging": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespaceNameStaging'), variables('defaultSASKeyName'))]",
    "sbVersion": "2017-04-01",
    "funcStorageAccountName": "[concat('nrxcbsnyssfuncappst', parameters('env'))]",
    "generalStorageAccountName": "[concat('nrxcbsnyssst', parameters('env'))]",
    "generalBlobContainerName": "nyss-blob-container",
    "smsGatewayBlobContainerName": "sms-gateway",
    "vnetName": "[concat('nrx-cbs-nyss-vnet-', parameters('env'))]",
    "vnetAddressPrefix": "10.0.0.0/16",
    "subnetName": "internal",
    "subnetPrefix": "10.0.0.0/24",
    "virtualNetworkId": "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
    "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('vnetName'), variables('subnetName'))]",
    "iotHubName": "[concat('nrx-cbs-nyss-iothub-', parameters('env'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('standardPlanName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('standardPlanName')))]",
      "location": "[variables('location')]",
      "tags": "[parameters('tagValues')]",
      "sku": {
        "Tier": "[parameters('sku')]",
        "Name": "[parameters('skuCode')]"
      },
      "properties": {
        "name": "[variables('standardPlanName')]",
        "workerSize": "[parameters('workerSize')]",
        "workerSizeId": "[parameters('workerSizeId')]",
        "numberOfWorkers": "[parameters('numberOfWorkers')]",
        "hostingEnvironment": "[parameters('hostingEnvironment')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "tags": "[parameters('tagValues')]",
      "name": "[variables('consumptionPlanName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('consumptionPlanName')))]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[variables('consumptionPlanName')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('funcAppName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('funcAppName')))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('microsoft.insights/components/', variables('funcAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('generalStorageAccountName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('consumptionPlanName'))]",
        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
      ],
      "kind": "functionapp",
      "tags": "[parameters('tagValues')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "enabled": true,
        "serverFarmId": "[variables('consumptionPlanId')]",
        "httpsOnly": true,
        "siteConfig": {
          "cors": {
            "allowedOrigins": [
            ]
          },
          "appSettings": [
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2018-11-01",
          "name": "appsettings",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('funcAppName')))]",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('funcAppName'))]"
          ],
          "properties": {
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('funcStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName')), '2015-05-01-preview').key1,';')]",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('funcStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName')), '2015-05-01-preview').key1,';')]",
            "FUNCTIONS_EXTENSION_VERSION": "~3",
            "FUNCTIONS_WORKER_RUNTIME": "dotnet",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('funcAppName')), '2015-05-01').InstrumentationKey]",
            "WEBSITE_TIME_ZONE": "W. Europe Standard Time",
            "SERVICEBUS_REPORTQUEUE": "[variables('reportQueueName')]",
            "SERVICEBUS_SENDEMAILQUEUE": "[variables('sendEmailQueueName')]",
            "SERVICEBUS_SENDSMSQUEUE": "[variables('sendSmsQueueName')]",
            "SERVICEBUS_CONNECTIONSTRING": "[listkeys(variables('defaultAuthRuleResourceId'), variables('sbVersion')).primaryConnectionString]",
            "AzureWebJobsSecretStorageType": "Blob"
          }
        },
        {
          "apiVersion": "2018-11-01",
          "type": "config",
          "name": "slotConfigNames",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('funcAppName')))]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', variables('funcAppName'))]"
          ],
          "properties": {
            "appSettingNames": [
              "SERVICEBUS_CONNECTIONSTRING"
            ]
          }
        },
        {
          "type": "slots",
          "name": "staging",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('funcAppName')))]",
          "apiVersion": "2018-11-01",
          "location": "[variables('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', variables('funcAppName'))]"
          ],
          "tags": "[parameters('tagValues')]",
          "properties": {
            "siteConfig": {
              "autoSwapSlotName": "production"
            },
            "appSettings": [
              {
                "name": "WEBSITE_RUN_FROM_PACKAGE",
                "value": "1"
              }
            ]
          },
          "resources": [
            {
              "apiVersion": "2018-11-01",
              "name": "appsettings",
              "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('funcAppName')))]",
              "type": "config",
              "dependsOn": [
                "[resourceId('Microsoft.Web/Sites/Slots', variables('funcAppName'), 'staging')]"
              ],
              "properties": {
                "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('funcStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName')), '2015-05-01-preview').key1,';')]",
                "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('funcStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName')), '2015-05-01-preview').key1,';')]",
                "FUNCTIONS_EXTENSION_VERSION": "~3",
                "FUNCTIONS_WORKER_RUNTIME": "dotnet",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('funcAppName')), '2015-05-01').InstrumentationKey]",
                "WEBSITE_TIME_ZONE": "W. Europe Standard Time",
                "SERVICEBUS_REPORTQUEUE": "[variables('reportQueueName')]",
                "SERVICEBUS_SENDEMAILQUEUE": "[variables('sendEmailQueueName')]",
                "SERVICEBUS_SENDSMSQUEUE": "[variables('sendSmsQueueName')]",
                "SERVICEBUS_CONNECTIONSTRING": "[listkeys(variables('defaultAuthRuleSbStaging'), variables('sbVersion')).primaryConnectionString]",
                "AzureWebJobsSecretStorageType": "Blob"
              }
            }
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('webAppName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('webAppName')))]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('microsoft.insights/components/', variables('webAppName'))]",
        "[concat('Microsoft.Web/serverfarms/', variables('standardPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('generalStorageAccountName'))]",
        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
      ],
      "tags": "[parameters('tagValues')]",
      "properties": {
        "siteConfig": {
          "metadata": [
            {
              "name": "CURRENT_STACK",
              "value": "[parameters('currentStack')]"
            }
          ],
          "alwaysOn": "[parameters('alwaysOn')]"
        },
        "serverFarmId": "[concat('/subscriptions/', variables('subscriptionId'),'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('standardPlanName'))]",
        "hostingEnvironment": "[parameters('hostingEnvironment')]",
        "clientAffinityEnabled": true,
        "httpsOnly": true
      },
      "resources": [
        {
          "apiVersion": "2018-11-01",
          "name": "authsettings",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('webAppName')))]",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', variables('webAppName'))]"
          ],
          "properties": {
            "enabled": "[and(not(equals(parameters('env'), 'prod')), not(equals(parameters('env'), 'demo')))]",
            "unauthenticatedClientAction": "RedirectToLoginPage",
            "tokenStoreEnabled": true,
            "defaultProvider": "AzureActiveDirectory",
            "clientId": "[parameters('aadWebAppClientId')]",
            "issuer": "[concat('https://sts.windows.net/', parameters('aadTenantId'), '/')]"
          }
        },
        {
          "apiVersion": "2018-11-01",
          "name": "appsettings",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('webAppName')))]",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', variables('webAppName'))]"
          ],
          "properties": {
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('webAppName')), '2015-05-01').InstrumentationKey]",
            "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
            "XDT_MicrosoftApplicationInsights_Mode": "default",
            "DiagnosticServices_EXTENSION_VERSION": "disabled",
            "APPINSIGHTS_PROFILERFEATURE_VERSION": "disabled",
            "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "disabled",
            "InstrumentationEngine_EXTENSION_VERSION": "disabled",
            "SnapshotDebugger_EXTENSION_VERSION": "disabled",
            "XDT_MicrosoftApplicationInsights_BaseExtensions": "disabled",
            "SlotName": "production"
          }
        },
        {
          "apiVersion": "2018-11-01",
          "type": "config",
          "name": "slotConfigNames",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('webAppName')))]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', variables('webAppName'))]"
          ],
          "properties": {
            "appSettingNames": [
              "SlotName"
            ]
          }
        },
        {
          "type": "slots",
          "name": "staging",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('webAppName')))]",
          "apiVersion": "2018-11-01",
          "kind": "app",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', variables('webAppName'))]"
          ],
          "location": "[variables('location')]",
          "tags": "[parameters('tagValues')]",
          "properties": {
            "serverFarmId": "[concat('/subscriptions/', variables('subscriptionId'),'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('standardPlanName'))]",
            "siteConfig": {
              "autoSwapSlotName": "production",
              "metadata": [
                {
                  "name": "CURRENT_STACK",
                  "value": "[parameters('currentStack')]"
                }
              ],
              "alwaysOn": "[parameters('alwaysOn')]",
              "httpsOnly": true
            }
          },
          "resources": [
            {
              "apiVersion": "2018-11-01",
              "name": "appsettings",
              "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('webAppName')))]",
              "type": "config",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', variables('webAppName'), 'staging')]"
              ],
              "properties": {
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('webAppName')), '2015-05-01').InstrumentationKey]",
                "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                "XDT_MicrosoftApplicationInsights_Mode": "default",
                "DiagnosticServices_EXTENSION_VERSION": "disabled",
                "APPINSIGHTS_PROFILERFEATURE_VERSION": "disabled",
                "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "disabled",
                "InstrumentationEngine_EXTENSION_VERSION": "disabled",
                "SnapshotDebugger_EXTENSION_VERSION": "disabled",
                "XDT_MicrosoftApplicationInsights_BaseExtensions": "disabled",
                "SlotName": "staging"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "[variables('reportApiWebAppName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('reportApiWebAppName')))]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "location": "[variables('location')]",
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[concat('microsoft.insights/components/', variables('reportApiWebAppName'))]",
        "[variables('standardPlanId')]",
        "[variables('virtualNetworkId')]"
      ],
      "properties": {
        "serverFarmId": "[variables('standardPlanId')]",
        "reserved": false,
        "siteConfig": {
          "http20Enabled": true,
          "minTlsVersion": "1.2",
          "ipSecurityRestrictions": [
            {
              "vnetSubnetResourceId": "[variables('virtualNetworkSubnetId')]",
              "action": "Allow",
              "tag": "Default",
              "priority": 200,
              "name": "[variables('subnetName')]",
              "description": "Isolate traffic to only coming from subnet"
            }
          ],
          "alwaysOn": "[parameters('alwaysOn')]"
        },
        "httpsOnly": true
      },
      "resources": [
        {
          "apiVersion": "2018-11-01",
          "name": "appsettings",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('reportApiWebAppName')))]",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('reportApiWebAppName'))]"
          ],
          "properties": {
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('reportApiWebAppName')), '2015-05-01').InstrumentationKey]",
            "ApplicationInsightsAgent_EXTENSION_VERSION": "~2"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('reportFuncAppName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('reportFuncAppName')))]",
      "location": "[variables('location')]",
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[concat('microsoft.insights/components/', variables('reportFuncAppName'))]",
        "[concat('Microsoft.Web/serverfarms/', variables('standardPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName'))]",
        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "serverFarmId": "[variables('standardPlanId')]",
        "httpsOnly": true,
        "redundancyMode": "None",
        "siteConfig": {
          "alwaysOn": "[parameters('alwaysOn')]",
          "appSettings": [
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "config",
          "apiVersion": "2018-11-01",
          "name": "appsettings",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('reportFuncAppName')))]",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('reportFuncAppName'))]"
          ],
          "properties": {
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('funcStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName')), '2015-05-01-preview').key1,';')]",
            "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('funcStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName')), '2015-05-01-preview').key1,';')]",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('reportFuncAppName')), '2015-05-01').InstrumentationKey]",
            "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('funcStorageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('funcStorageAccountName')), '2015-05-01-preview').key1,';')]",
            "WEBSITE_CONTENTSHARE": "[concat(toLower(variables('reportFuncAppName')),uniqueString(variables('reportFuncAppName')))]",
            "WEBSITE_TIME_ZONE": "W. Europe Standard Time",
            "FUNCTIONS_EXTENSION_VERSION": "~3",
            "FUNCTIONS_WORKER_RUNTIME": "dotnet",
            "SERVICEBUS_CONNECTIONSTRING": "[listkeys(variables('defaultAuthRuleResourceId'), variables('sbVersion')).primaryConnectionString]",
            "SERVICEBUS_REPORTQUEUE": "[variables('reportQueueName')]",
            "SERVICEBUS_SENDEMAILQUEUE": "[variables('sendEmailQueueName')]",
            "SERVICEBUS_REPORTDISMISSALQUEUE": "[variables('reportDismissalQueue')]",
            "SERVICEBUS_CHECKALERTQUEUE": "[variables('checkAlertQueue')]"
          }
        },
        {
          "type": "networkConfig",
          "apiVersion": "2018-11-01",
          "name": "virtualNetwork",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('reportFuncAppName')))]",
          "location": "[variables('location')]",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('reportFuncAppName'))]"
          ],
          "properties": {
            "subnetResourceId": "[variables('virtualNetworkSubnetId')]",
            "swiftSupported": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[variables('serviceBusNamespaceName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('serviceBusNamespaceName')))]",
      "location": "[variables('location')]",
      "tags": "[parameters('tagValues')]",
      "sku": {
        "name": "[parameters('serviceBusSku')]"
      },
      "properties": {
      },
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('reportQueueName')]",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('serviceBusNamespaceName')))]",
          "type": "queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "deadLetteringOnMessageExpiration": true,
            "maxDeliveryCount": 1,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('sendEmailQueueName')]",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('serviceBusNamespaceName')))]",
          "type": "queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "deadLetteringOnMessageExpiration": true,
            "maxDeliveryCount": 1,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('reportDismissalQueue')]",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('serviceBusNamespaceName')))]",
          "type": "queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "deadLetteringOnMessageExpiration": true,
            "maxDeliveryCount": 1,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('checkAlertQueue')]",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('serviceBusNamespaceName')))]",
          "type": "queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "deadLetteringOnMessageExpiration": true,
            "maxDeliveryCount": 1,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('sendSmsQueueName')]",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('serviceBusNamespaceName')))]",
          "type": "queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "deadLetteringOnMessageExpiration": true,
            "maxDeliveryCount": 1,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false
          }
        }
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[variables('serviceBusNamespaceNameStaging')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('serviceBusNamespaceNameStaging')))]",
      "location": "[variables('location')]",
      "tags": "[parameters('tagValues')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
      },
      "resources": [
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('reportQueueName')]",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('serviceBusNamespaceNameStaging')))]",
          "type": "queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceNameStaging'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "deadLetteringOnMessageExpiration": true,
            "maxDeliveryCount": 1,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('sendEmailQueueName')]",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('serviceBusNamespaceNameStaging')))]",
          "type": "queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceNameStaging'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "deadLetteringOnMessageExpiration": true,
            "maxDeliveryCount": 1,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('reportDismissalQueue')]",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('serviceBusNamespaceNameStaging')))]",
          "type": "queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceNameStaging'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "deadLetteringOnMessageExpiration": true,
            "maxDeliveryCount": 1,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('checkAlertQueue')]",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('serviceBusNamespaceNameStaging')))]",
          "type": "queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceNameStaging'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "deadLetteringOnMessageExpiration": true,
            "maxDeliveryCount": 1,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false
          }
        },
        {
          "apiVersion": "2017-04-01",
          "name": "[variables('sendSmsQueueName')]",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('serviceBusNamespaceNameStaging')))]",
          "type": "queues",
          "dependsOn": [
            "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceNameStaging'))]"
          ],
          "properties": {
            "lockDuration": "PT1M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "deadLetteringOnMessageExpiration": true,
            "maxDeliveryCount": 1,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('funcStorageAccountName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('funcStorageAccountName')))]",
      "apiVersion": "2018-07-01",
      "location": "[variables('location')]",
      "kind": "[parameters('storageKind')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "tags": "[parameters('tagValues')]",
      "properties": {
        "accessTier": "[parameters('storageAccessTier')]",
        "supportsHttpsTrafficOnly": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        }
      },
      "resources": [
        {
          "name": "default",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('funcStorageAccountName')))]",
          "type": "blobServices",
          "apiVersion": "2018-07-01",
          "properties": {
            "deleteRetentionPolicy": {
              "enabled": true,
              "days": 30
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', variables('funcStorageAccountName'))]"
          ],
          "resources": [
            {
              "name": "[variables('smsGatewayBlobContainerName')]",
              "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('funcStorageAccountName')))]",
              "type": "containers",
              "apiVersion": "2018-07-01",
              "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('funcStorageAccountName'), '/blobServices/default')]"
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('generalStorageAccountName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('generalStorageAccountName')))]",
      "apiVersion": "2018-07-01",
      "location": "[variables('location')]",
      "kind": "[parameters('storageKind')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "tags": "[parameters('tagValues')]",
      "properties": {
        "accessTier": "[parameters('storageAccessTier')]",
        "supportsHttpsTrafficOnly": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        }
      },
      "resources": [
        {
          "name": "default",
          "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('generalStorageAccountName')))]",
          "type": "blobServices",
          "apiVersion": "2018-07-01",
          "properties": {
            "deleteRetentionPolicy": {
              "enabled": true,
              "days": 30
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', variables('generalStorageAccountName'))]"
          ],
          "resources": [
            {
              "name": "[variables('generalBlobContainerName')]",
              "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('generalStorageAccountName')))]",
              "type": "containers",
              "apiVersion": "2018-07-01",
              "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('generalStorageAccountName'), '/blobServices/default')]"
              ]
            },
            {
              "name": "insights-logs-connections",
              "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('generalStorageAccountName')))]",
              "type": "containers",
              "apiVersion": "2018-07-01",
              "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('generalStorageAccountName'), '/blobServices/default')]"
              ],
              "properties": {
                "publicAccess": "None"
              }
            }
          ]
        }
      ]
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('funcAppName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('funcAppName')))]",
      "location": "[variables('location')]",
      "tags": "[parameters('tagValues')]",
      "kind": "funcapp",
      "properties": {
        "ApplicationId": "[variables('funcAppName')]",
        "Application_Type": "other",
        "Request_Source": "rest"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('reportFuncAppName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('reportFuncAppName')))]",
      "location": "[variables('location')]",
      "tags": "[parameters('tagValues')]",
      "kind": "funcapp",
      "properties": {
        "ApplicationId": "[variables('reportFuncAppName')]",
        "Application_Type": "other",
        "Request_Source": "rest"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('reportApiWebAppName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('reportApiWebAppName')))]",
      "location": "[variables('location')]",
      "tags": "[parameters('tagValues')]",
      "kind": "api",
      "properties": {
        "ApplicationId": "[variables('reportApiWebAppName')]",
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('webAppName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('webAppName')))]",
      "location": "[variables('location')]",
      "tags": "[parameters('tagValues')]",
      "kind": "web",
      "properties": {
        "ApplicationId": "[variables('webAppName')]",
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "condition": "[or(empty(variables('specificResource')),equals(variables('specificResource'),variables('vnetName')))]",
      "location": "[variables('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Web",
                  "locations": [
                    "*"
                  ]
                }
              ],
              "delegations": [
                {
                  "name": "webapp",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverFarms",
                    "actions": [
                      "Microsoft.Network/virtualNetworks/subnets/action"
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2019-11-04",
      "name": "[variables('iotHubName')]",
      "location": "[variables('location')]",
      "condition": "[not(equals(parameters('env'), 'test'))]",
      "sku": {
        "name": "S1",
        "capacity": 1
      },
      "properties": {
        "eventHubEndpoints": {
          "events": {
            "retentionTimeInDays": 1,
            "partitionCount": 2
          }
        }
      }
    }
  ]
}
