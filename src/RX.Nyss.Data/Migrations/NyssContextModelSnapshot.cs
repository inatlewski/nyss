// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using RX.Nyss.Data;
using RX.Nyss.Data.Concepts;

namespace RX.Nyss.Data.Migrations
{
    [DbContext(typeof(NyssContext))]
    partial class NyssContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("nyss")
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RX.Nyss.Data.Models.Alert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectHealthRiskId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectHealthRiskId");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.AlertEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlertId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlertId");

                    b.HasIndex("UserId");

                    b.ToTable("AlertEvents");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.AlertRecipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlertRuleId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AlertRuleId");

                    b.ToTable("AlertRecipients");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.AlertReport", b =>
                {
                    b.Property<int>("AlertId")
                        .HasColumnType("int");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("AlertId", "ReportId");

                    b.HasIndex("ReportId");

                    b.ToTable("AlertReports");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.AlertRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountThreshold")
                        .HasColumnType("int");

                    b.Property<int?>("HoursThreshold")
                        .HasColumnType("int");

                    b.Property<int?>("MetersThreshold")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AlertRules");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.ApplicationLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique();

                    b.ToTable("ApplicationLanguages");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.ContentLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique();

                    b.ToTable("ContentLanguages");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.DataCollector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalPhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DataCollectorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geography");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("VillageId")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("VillageId");

                    b.HasIndex("ZoneId");

                    b.ToTable("DataCollectors");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.GatewaySetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("GatewayType")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("NationalSocietyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationalSocietyId");

                    b.ToTable("GatewaySettings");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.HealthRisk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlertRuleId")
                        .HasColumnType("int");

                    b.Property<int>("HealthRiskCode")
                        .HasColumnType("int");

                    b.Property<string>("HealthRiskType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("AlertRuleId");

                    b.ToTable("HealthRisks");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.HealthRiskLanguageContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseDefinition")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("ContentLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("FeedbackMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(160)")
                        .HasMaxLength(160);

                    b.Property<int>("HealthRiskId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ContentLanguageId");

                    b.HasIndex("HealthRiskId");

                    b.ToTable("HealthRiskLanguageContents");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Localization", b =>
                {
                    b.Property<int>("ApplicationLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ApplicationLanguageId", "Key");

                    b.ToTable("Localizations");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.LocalizedTemplate", b =>
                {
                    b.Property<int>("ApplicationLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.HasKey("ApplicationLanguageId", "Key");

                    b.ToTable("LocalizedTemplates");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.NationalSociety", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContentLanguageId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("DistrictCustomName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RegionCustomName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VillageCustomName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ZoneCustomName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ContentLanguageId");

                    b.HasIndex("CountryId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("NationalSocieties");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsOpened")
                        .HasColumnType("bit");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContentLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("NationalSocietyId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ContentLanguageId");

                    b.HasIndex("NationalSocietyId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.ProjectHealthRisk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlertRuleId")
                        .HasColumnType("int");

                    b.Property<string>("FeedbackMessage")
                        .HasColumnType("nvarchar(160)")
                        .HasMaxLength(160);

                    b.Property<int>("HealthRiskId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlertRuleId");

                    b.HasIndex("HealthRiskId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectHealthRisks");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("NationalSocietyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationalSocietyId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataCollectorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTraining")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geography");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ProjectHealthRiskId")
                        .HasColumnType("int");

                    b.Property<string>("RawContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(160)")
                        .HasMaxLength(160);

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("DataCollectorId");

                    b.HasIndex("ProjectHealthRiskId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalPhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("ApplicationLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("IdentityUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFirstLogin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ApplicationLanguageId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Role");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.UserNationalSociety", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("NationalSocietyId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "NationalSocietyId");

                    b.HasIndex("NationalSocietyId");

                    b.ToTable("UserNationalSocieties");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Village", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Villages");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Zone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("VillageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VillageId");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.AdministratorUser", b =>
                {
                    b.HasBaseType("RX.Nyss.Data.Models.User");

                    b.HasDiscriminator().HasValue("Administrator");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.DataConsumerUser", b =>
                {
                    b.HasBaseType("RX.Nyss.Data.Models.User");

                    b.HasDiscriminator().HasValue("DataConsumer");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.DataManagerUser", b =>
                {
                    b.HasBaseType("RX.Nyss.Data.Models.User");

                    b.Property<DateTime?>("ConsentedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasConsented")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDataOwner")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("DataManager");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.GlobalCoordinatorUser", b =>
                {
                    b.HasBaseType("RX.Nyss.Data.Models.User");

                    b.HasDiscriminator().HasValue("GlobalCoordinator");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.SupervisorUser", b =>
                {
                    b.HasBaseType("RX.Nyss.Data.Models.User");

                    b.Property<int?>("DataManagerUserId")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("VillageId")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasIndex("DataManagerUserId");

                    b.HasIndex("VillageId");

                    b.HasIndex("ZoneId");

                    b.HasDiscriminator().HasValue("Supervisor");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.TechnicalAdvisorUser", b =>
                {
                    b.HasBaseType("RX.Nyss.Data.Models.User");

                    b.HasDiscriminator().HasValue("TechnicalAdvisor");
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Alert", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.ProjectHealthRisk", "ProjectHealthRisk")
                        .WithMany()
                        .HasForeignKey("ProjectHealthRiskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.AlertEvent", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.Alert", "Alert")
                        .WithMany()
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RX.Nyss.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.AlertRecipient", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.AlertRule", "AlertRule")
                        .WithMany()
                        .HasForeignKey("AlertRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.AlertReport", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.Alert", "Alert")
                        .WithMany("AlertReports")
                        .HasForeignKey("AlertId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RX.Nyss.Data.Models.Report", "Report")
                        .WithMany("ReportAlerts")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.DataCollector", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RX.Nyss.Data.Models.SupervisorUser", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RX.Nyss.Data.Models.Village", "Village")
                        .WithMany()
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RX.Nyss.Data.Models.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.District", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.GatewaySetting", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.NationalSociety", "NationalSociety")
                        .WithMany()
                        .HasForeignKey("NationalSocietyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.HealthRisk", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.AlertRule", "AlertRule")
                        .WithMany()
                        .HasForeignKey("AlertRuleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.HealthRiskLanguageContent", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.ContentLanguage", "ContentLanguage")
                        .WithMany()
                        .HasForeignKey("ContentLanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RX.Nyss.Data.Models.HealthRisk", "HealthRisk")
                        .WithMany("LanguageContents")
                        .HasForeignKey("HealthRiskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Localization", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.ApplicationLanguage", "ApplicationLanguage")
                        .WithMany()
                        .HasForeignKey("ApplicationLanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.LocalizedTemplate", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.ApplicationLanguage", "ApplicationLanguage")
                        .WithMany()
                        .HasForeignKey("ApplicationLanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.NationalSociety", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.ContentLanguage", "ContentLanguage")
                        .WithMany()
                        .HasForeignKey("ContentLanguageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RX.Nyss.Data.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Notification", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Project", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.ContentLanguage", "ContentLanguage")
                        .WithMany()
                        .HasForeignKey("ContentLanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RX.Nyss.Data.Models.NationalSociety", "NationalSociety")
                        .WithMany()
                        .HasForeignKey("NationalSocietyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.ProjectHealthRisk", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.AlertRule", "AlertRule")
                        .WithMany()
                        .HasForeignKey("AlertRuleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RX.Nyss.Data.Models.HealthRisk", "HealthRisk")
                        .WithMany()
                        .HasForeignKey("HealthRiskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RX.Nyss.Data.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Region", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.NationalSociety", "NationalSociety")
                        .WithMany()
                        .HasForeignKey("NationalSocietyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Report", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.DataCollector", "DataCollector")
                        .WithMany()
                        .HasForeignKey("DataCollectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RX.Nyss.Data.Models.ProjectHealthRisk", "ProjectHealthRisk")
                        .WithMany()
                        .HasForeignKey("ProjectHealthRiskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("RX.Nyss.Data.Models.DataCollectionPointCase", "DataCollectionPointCase", b1 =>
                        {
                            b1.Property<int>("ReportId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int?>("DeathCount")
                                .HasColumnType("int");

                            b1.Property<int?>("FromOtherVillagesCount")
                                .HasColumnType("int");

                            b1.Property<int?>("ReferredCount")
                                .HasColumnType("int");

                            b1.HasKey("ReportId");

                            b1.ToTable("Reports");

                            b1.WithOwner()
                                .HasForeignKey("ReportId");
                        });

                    b.OwnsOne("RX.Nyss.Data.Models.ReportCase", "KeptCase", b1 =>
                        {
                            b1.Property<int>("ReportId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int?>("CountFemalesAtLeastFive")
                                .HasColumnType("int");

                            b1.Property<int?>("CountFemalesBelowFive")
                                .HasColumnType("int");

                            b1.Property<int?>("CountMalesAtLeastFive")
                                .HasColumnType("int");

                            b1.Property<int?>("CountMalesBelowFive")
                                .HasColumnType("int");

                            b1.HasKey("ReportId");

                            b1.ToTable("Reports");

                            b1.WithOwner()
                                .HasForeignKey("ReportId");
                        });

                    b.OwnsOne("RX.Nyss.Data.Models.ReportCase", "ReportedCase", b1 =>
                        {
                            b1.Property<int>("ReportId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int?>("CountFemalesAtLeastFive")
                                .HasColumnType("int");

                            b1.Property<int?>("CountFemalesBelowFive")
                                .HasColumnType("int");

                            b1.Property<int?>("CountMalesAtLeastFive")
                                .HasColumnType("int");

                            b1.Property<int?>("CountMalesBelowFive")
                                .HasColumnType("int");

                            b1.HasKey("ReportId");

                            b1.ToTable("Reports");

                            b1.WithOwner()
                                .HasForeignKey("ReportId");
                        });
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.User", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.ApplicationLanguage", "ApplicationLanguage")
                        .WithMany()
                        .HasForeignKey("ApplicationLanguageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.UserNationalSociety", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.NationalSociety", "NationalSociety")
                        .WithMany("NationalSocietyUsers")
                        .HasForeignKey("NationalSocietyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RX.Nyss.Data.Models.User", "User")
                        .WithMany("UserNationalSocieties")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Village", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.Zone", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.Village", "Village")
                        .WithMany()
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("RX.Nyss.Data.Models.SupervisorUser", b =>
                {
                    b.HasOne("RX.Nyss.Data.Models.DataManagerUser", "DataManagerUser")
                        .WithMany()
                        .HasForeignKey("DataManagerUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RX.Nyss.Data.Models.Village", "Village")
                        .WithMany()
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RX.Nyss.Data.Models.Zone", "Zone")
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
